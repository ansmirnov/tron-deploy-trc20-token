#+TITLE: TRON: Deploy TRC-20 token
#+PROPERTY: header-args :session *shell tron* :results silent raw

** Contents                                                           :TOC_3:
  - [[#environment-description][Environment description]]
  - [[#requirements][Requirements]]
  - [[#quick-start-in-docker][Quick start in Docker]]
  - [[#install-a-tron-box][Install a tron-box]]
  - [[#initialize-a-tron-box-project][Initialize a tron-box project]]
  - [[#compile-smart-contracts][Compile smart contracts]]
  - [[#prepare-network-parameters-for-deployment][Prepare network parameters for deployment]]
  - [[#deploy-smart-contracts][Deploy smart contracts]]
  - [[#references][References]]

** Environment description

- Deployed java-tron v4.0.1

** Requirements

- NodeJS 15.6.0

** Quick start in Docker

#+BEGIN_SRC sh
docker build -t tron-deploy-trc20 .
#+END_SRC

#+BEGIN_SRC sh
docker run tron-deploy-trc20 -it bash
#+END_SRC

** Install a tron-box

#+BEGIN_SRC sh
npm install -g tronbox
#+END_SRC

** Initialize a tron-box project

#+BEGIN_SRC sh
tronbox init
#+END_SRC

** Compile smart contracts

#+BEGIN_SRC sh
tronbox compile
#+END_SRC

** Prepare network parameters for deployment

Write the network parameters in the .env file.

#+BEGIN_SRC sh
export PRIVATE_KEY="..."
export NETWORK_ID="1"
export HOST_PORT=8090
#+END_SRC

** Deploy smart contracts

We use the =--reset= parameter to completely update the contract.

#+BEGIN_SRC sh
source .env && tronbox migrate --reset
#+END_SRC

** References

1. https://github.com/tron-us/tronbox

2. https://developers.tron.network/docs/tron-box-user-guide

3. https://docs.openzeppelin.com/contracts/3.x/erc20
